<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Hiroshi Ukai&#39;s blog</title>
    <link>https://dakusui.github.io/posts/</link>
    <description>Recent content in Posts on Hiroshi Ukai&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 31 May 2022 05:08:09 +0900</lastBuildDate><atom:link href="https://dakusui.github.io/posts/index.xml" rel="self" type="application/rss+xml" /><item>
      <title>About Assertions 2</title>
      <link>https://dakusui.github.io/posts/about-assertions-2/</link>
      <pubDate>Tue, 31 May 2022 05:08:09 +0900</pubDate>
      
      <guid>https://dakusui.github.io/posts/about-assertions-2/</guid>
      <description>Then the &amp;#34;Hamcrest&amp;#34; comes. It was the first and only library bundled with the JUnit (not anymore with JUnit5). As we saw in the previous post, the assertion capability was a part of the testing framework library until JUnit 3’s age.
 From the age of the book &amp;#34;Refactoring&amp;#34;, how to describe a failure was a concern, only checking if a condition true or not wasn’t sufficient from the beginning. &amp;#34;How&amp;#34; it was not satisfied matters.</description>
    </item>
    
    <item>
      <title>About Assertions 1</title>
      <link>https://dakusui.github.io/posts/about-assertions-1/</link>
      <pubDate>Tue, 31 May 2022 04:39:15 +0900</pubDate>
      
      <guid>https://dakusui.github.io/posts/about-assertions-1/</guid>
      <description>When I write a test with JUnit, etc., I always feel annoyed at not being able to make it clean or doing so is really difficult. Let me state here, my principles in coding.
  &amp;#34;Repetitive things are machine’s, not human’s&amp;#34;
  &amp;#34;Tests are also codes. They should be as clean as the product&amp;#34;
   Perhaps, I need to add some other new principles to them later as my thought develops through posting entries to this blog, but anyway, I am going to call the set of my ideas that I am presenting here, &amp;#34;Test Design as Code&amp;#34;.</description>
    </item>
    
    <item>
      <title>Second Post</title>
      <link>https://dakusui.github.io/posts/second-post/</link>
      <pubDate>Tue, 17 May 2022 19:34:01 +0900</pubDate>
      
      <guid>https://dakusui.github.io/posts/second-post/</guid>
      <description>Then trying ditaa, which wouldn’t be working with hugo.
 +-----+ |hello| +-----+   </description>
    </item>
    
    <item>
      <title>First Post</title>
      <link>https://dakusui.github.io/posts/first-post/</link>
      <pubDate>Tue, 17 May 2022 18:42:24 +0900</pubDate>
      
      <guid>https://dakusui.github.io/posts/first-post/</guid>
      <description>This is my first post on this my new blog. Let me try the asciidoctor’s source feature.
 public class Hello { public static void main(String... args) { System.out.println(&amp;#34;Hello, world&amp;#34;); } }   </description>
    </item>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  </channel>
</rss>
